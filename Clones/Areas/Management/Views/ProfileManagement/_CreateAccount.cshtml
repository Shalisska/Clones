@model Clones.Models.BaseViewModel<Application.Models.AccountModel>

@{ 
    var model = Model.ModelList.FirstOrDefault();
    var profilesData = Model.Item["Profiles"] as IEnumerable<Application.Models.ProfileModel>;
    var profiles = new SelectList(profilesData, "Id", "Name");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table class="table">
        <tr>
            <th>
                @Html.LabelFor(item => model.ProfileId, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                @Html.LabelFor(item => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th></th>
        </tr>
        <tr>
            <td>
                @Html.DropDownListFor(item => model.ProfileId, profiles, new { @class = "form-control" })
                @Html.ValidationMessageFor(item => model.ProfileId, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(item => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(item => model.Name, "", new { @class = "text-danger" })
            </td>
            <td>
                <button class="btn btn-primary j-create-model">Create</button>
                <button type="reset" class="btn btn-default">Cancel</button>
            </td>
        </tr>
    </table>
}
