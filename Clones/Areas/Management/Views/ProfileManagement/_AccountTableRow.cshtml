@using Clones.Helpers;

@model Application.Models.AccountModel

@{
    var item = Model;
    var itemName = "model";
    var profilesData = ViewData["profiles"] as IEnumerable<Application.Models.ProfileModel>;
    var profiles = new SelectList(profilesData, "Id", "Name", item.ProfileId);
}


<td>
    @Html.DropDownListFor(modelItem => item.ProfileId, profiles, new { @class = "form-control" })
    @Html.ValidationMessageForNew(modelItem => item.Name, $"item.ProfileId-{item.Id}")
</td>
<td>
    @Html.HiddenForNew(modelItem => item.Id, $"item.Id-{item.Id}")
    @Html.DisplayFor(modelItem => item.Id)
</td>
<td>
    @Html.EditorForNew(modelItem => item.Name, $"item.Name-{item.Id}", new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageForNew(modelItem => item.Name, $"item.Name-{item.Id}")
</td>
<td>
    <a id="@($"edit-{itemName}-{item.Id}")" class="btn btn-primary j-save-model" data-id="@(item.Id)">Save</a>
    <a id="@($"delete-{itemName}-{item.Id}")" class="btn btn-danger j-delete-model" data-id="@(item.Id)" data-name="@(item.Name)" data-toggle="modal" data-target="#deleteModel">Delete</a>
</td>


