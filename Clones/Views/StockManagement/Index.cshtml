@using Application.Models;
@model IEnumerable<Application.Models.StockModel>
@{
    var controllerName = "StockManagement";
    var createActionName = "CreateStock";
    var getTableActionName = "GetTable";
    var editActionName = "EditStock";
    var deleteActionName = "DeleteStock";
}

@{
    ViewBag.Title = "Index";
    var modelForPopup = Model.Any() ? Model.FirstOrDefault() : new Application.Models.StockModel();
}

<h2>@ViewBag.Title</h2>


<div id="create" data-create="/StockManagement/CreateStock" data-create-new="@($"/{controllerName}/{createActionName}")">
    <button class="j-show btn btn-primary" style="margin-bottom: 15px;">Create New</button>
    <div class="j-hidden-block" style="display: none;">
        @{Html.RenderPartial("_CreateStock", new Application.Models.StockModel()); }
    </div>
</div>

<div id="content-table" data-update="@($"/{controllerName}/{getTableActionName}")" data-save="@($"/{controllerName}/{editActionName}")" data-delete="@($"/{controllerName}/{deleteActionName}")">
    @{ Html.RenderPartial("_EditTable");}
</div>

@Html.Partial("_DeleteModelPopup", modelForPopup)

<div class="j-response" style="position: fixed; right: 15px; bottom: 30px; color: white;"></div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

