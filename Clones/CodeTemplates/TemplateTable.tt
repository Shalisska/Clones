<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
#>

<#
if(IsPartialView) {
#>
<#
} else if(IsLayoutPageSelected) {
#>

@{
	ViewBag.Title = "<#= ViewName#>";
<#
	if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
	Layout = "<#= LayoutPageFile#>";
<#
	}
#>
}

<h2>@ViewBag.Title</h2>

<#
} else {
#>

@{
Layout = null;
}

<!DOCTYPE html>

<html>
	<head>
		<meta name="viewport" content="width=device-width" />
		<title><#= ViewName #></title>
	</head>
	<body>
<#
PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<#
}
#>
<#
else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
}
#>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
<# 
	if (isControlHtmlAttributesSupported) {
#>
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<#        
	} else {
#>
	@Html.ValidationSummary(true)
<#      
	}
#>

	<table class="table">
		<tr>
<#
		IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
		foreach (PropertyMetadata property in properties) {
#>
			<th>
<#
			if (property.Scaffold && !property.IsForeignKey) {
#>
<#
			// We do not want to show any association properties for which there is
			// no associated foreign key.
			if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
			continue;
			}
#>
				@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
<#
			}
#>
			</th>
<#
			}
#>
			<th></th>
		</tr>

		@foreach (var item in Model)
		{
			<tr id="@($"model-{item.Id}")">
				@{Html.RenderPartial("_TableRow", item);}
			</tr>
		}
	</table>
	
	<input type="submit" value="Save" class="btn btn-default" />
}

<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>